@{
    ViewData["Title"] = "Home Page";
}
@model List<Donut>



<div class="modal fade" id="modalPedido" tabindex="-1" aria-labelledby="modalPedidoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="background-color: #FFEAEA; border: 2px solid #652818; border-radius: 20px;">
            <div class="modal-header" style="border-bottom: 2px solid #652818;">
                <h5 class="modal-title fw-bold" id="modalPedidoLabel" style="color: #b04848; font-family: 'Arial', sans-serif;">
                    Confirmação
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body text-center fw-bold" style="color: #652818;">
                @TempData["Mensagem"]
            </div>
            <div class="modal-footer justify-content-center" style="border-top: 2px solid #652818;">
                <button type="button" class="btn rounded-pill" data-bs-dismiss="modal"
                        style="background-color: #b04848; color: white; width: 150px;">
                    Fechar
                </button>

                @if (TempData["Mensagem"]?.ToString() == "Pedido enviado com sucesso!")
                {
                    <a href="@Url.Action("Index", "Pedido")" class="btn rounded-pill"
                       style="background-color: #652818; color: white; width: 150px;">
                        Ver Pedidos
                    </a>
                }
            </div>
        </div>
    </div>
</div>


<!-- Conteúdo Central -->
<!-- Centralizando a imagem -->
<form asp-controller="Home" asp-action="EnviarPedido" method="post">
    <div class="box mb-5">

        <div class="d-flex justify-content-center mb-3">
            <img src="~/img/nomelogo.png" class="img-fluid" style="max-width: 200px; height: auto;" />
        </div>
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="border border-dark rounded-pill p-2 mb-2 d-flex justify-content-between align-items-center">
                <span class="fw-bold">@Model[i].Sabor</span>

                <div class="d-flex align-items-center">
                    <button type="button" class="btn btn-sm " onclick="decreaseQuantity(this)">
                        <i class="fa-solid fa-circle-minus"
                           style="color: #652818;"></i>
                    </button>

                    <!-- Campo para enviar o ID correto do Donut -->
                    <input type="hidden" name="Pedido.Itens[@i].DonutId" value="@Model[i].Id" />
                    <!-- Campo para enviar a quantidade -->
                    <input type="text" class="form-control text-center border-0 bg-transparent fw-bold"
                           name="Pedido.Itens[@i].Quantidade" value="0" min="0" style="width: 50px;">

                    <button type="button" class="btn  btn-sm" onclick="increaseQuantity(this)">
                        <i class="fa-solid fa-circle-plus"
                           style="color: #652818;"></i>
                    </button>
                </div>
            </div>
        }

    </div>

    <div class="d-flex justify-content-center">
        <input type="submit" class="btn w-50 mt-5 rounded-pill"
               style="background-color: #652818; color: white;"
               value="Enviar Pedido" />
        <a class="btn w-15 mt-5 rounded-pill"
           style="background-color: #652818; color: white;" href="@Url.Action("Index", "Pedido")">
            Ver Pedidos
        </a>

    </div>

</form>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var modalPedido = new bootstrap.Modal(document.getElementById('modalPedido'));

        // Se houver uma mensagem no TempData, abre o modal automaticamente
        if ('@TempData["Mensagem"]' !== '') {
            modalPedido.show();
        }
    });
</script>
<script>
    function increaseQuantity(button) {
        let input = button.previousElementSibling; // Pega o input antes do botão "+"
        if (input && input.tagName === "INPUT") {
            let currentValue = parseInt(input.value || "0", 10);
            input.value = currentValue + 1;
        }
    }

    function decreaseQuantity(button) {
        let input = button.nextElementSibling; // Pega o input depois do botão "-"
        if (input && input.tagName === "INPUT") {
            let currentValue = parseInt(input.value || "0", 10);
            if (currentValue > 0) {
                input.value = currentValue - 1;
            }
        }
    }
</script>


